from telethon import events, utils, functions
import logging
from message_handler import handle_star_gift

logger = logging.getLogger(__name__)

# ... (—Ñ—É–Ω–∫—Ü–∏—è register_gift_listener –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

def register_gift_listener(client):
    """
    –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –í–°–ï –ù–û–í–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è (real-time).
    """
    @client.on(events.NewMessage)
    async def handle_new_gift(event):
        message = event.message
        action = getattr(message, 'action', None)
        if not action:
            return

        action_type = type(action).__name__
        if action_type == 'MessageActionStarGiftUnique':
            chat_name = utils.get_display_name(await event.get_chat())
            logger.info(f"üéÅ (Real-Time) –ù–æ–≤—ã–π NFT: {action_type} –≤ —á–∞—Ç–µ '{chat_name}'")
            try:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥, –ª–æ–≥–∏—Ä—É–µ–º
                await handle_star_gift(message, client)
                
                # –ü–æ–º–µ—á–∞–µ–º —Ç–æ–ª—å–∫–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ (–¥–ª—è —á–∏—Å—Ç–æ—Ç—ã)
                await client(functions.messages.ReadMessageContentsRequest(
                    id=[message.id]
                ))

            except Exception as e:
                logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ NFT: {e}")


async def process_chat_history(client):
    """
    –ü—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –í–°–ï–• –¥–∏–∞–ª–æ–≥–æ–≤, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –¢–û–õ–¨–ö–û –ù–ï–ü–†–û–ß–ò–¢–ê–ù–ù–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è
    —Å –ø–æ–¥–∞—Ä–∫–∞–º–∏, –∏ –ø–æ–º–µ—á–∞–µ—Ç –∏—Ö –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
    """
    logger.info("‚è≥ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∏—Å—Ç–æ—Ä–∏–∏: –∏—â–µ–º –ù–ï–ü–†–û–ß–ò–¢–ê–ù–ù–´–ï NFT-–ø–æ–¥–∞—Ä–∫–∏...")
    total_processed_gifts = 0
    total_scanned_chats = 0
    
    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ –≤—Å–µ–º –¥–∏–∞–ª–æ–≥–∞–º
    async for dialog in client.iter_dialogs():
        chat_entity = dialog.entity
        chat_name = utils.get_display_name(chat_entity)
        processed_count = 0
        total_scanned_chats += 1
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∏–∞–ª–æ–≥–µ
        if dialog.unread_count == 0:
             continue
        
        # üí° –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º dialog.dialog.read_inbox_max_id
        # –ï—Å–ª–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ dialog –Ω–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É–∂–µ–±–Ω—ã—Ö —á–∞—Ç–æ–≤),
        # –∏—Å–ø–æ–ª—å–∑—É–µ–º 0, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏.
        last_read_id = getattr(getattr(dialog, 'dialog', None), 'read_inbox_max_id', 0)
        
        logger.info(f"üîé –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ù–ï–ü–†–û–ß–ò–¢–ê–ù–ù–û–ô –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞: '{chat_name}' (–ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {dialog.unread_count}, Last Read ID: {last_read_id})")

        processed_ids = []

        # –ò—Ç–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è. –õ–∏–º–∏—Ç 2000 –¥–ª—è –æ—Ö–≤–∞—Ç–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
        async for message in client.iter_messages(chat_entity, limit=2000): 
            
            # ‚ùó –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–°–õ–û–í–ò–Ø: 
            # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∏—Ç–µ—Ä–∞—Ü–∏—é, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Å—Ç—Ä–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —è–≤–Ω–æ —Å—Ç–∞—Ä—à–µ 
            # –∏–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º –∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º ID.
            if message.id <= last_read_id:
                 break
            
            action = getattr(message, 'action', None)
            
            if action and type(action).__name__ == 'MessageActionStarGiftUnique':
                processed_count += 1
                total_processed_gifts += 1
                
                logger.warning(f"üìú (Unread History) –ù–∞–π–¥–µ–Ω NFT –≤ MSG_ID: {message.id} –≤ —á–∞—Ç–µ '{chat_name}'")
                
                try:
                    await handle_star_gift(message, client)
                    processed_ids.append(message.id)
                except Exception as e:
                    logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ NFT –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (MSG_ID: {message.id}, –ß–∞—Ç: {chat_name}): {e}")
        
        
        # 3. –ü–æ–º–µ—á–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ (–≤ —ç—Ç–æ–º —á–∞—Ç–µ) –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
        if processed_ids:
            try:
                # –û—Ç–º–µ—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await client(functions.messages.ReadMessageContentsRequest(
                    id=processed_ids
                ))
                logger.info(f"‚òëÔ∏è –ü–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ {len(processed_ids)} NFT –≤ —á–∞—Ç–µ '{chat_name}'.")
            except Exception as e:
                 logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è {processed_ids} –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ: {e}")

        
        logger.info(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ '{chat_name}' –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–π–¥–µ–Ω–æ NFT: {processed_count}.")

    logger.info(f"üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —á–∞—Ç–æ–≤: {total_scanned_chats}. –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ NFT: {total_processed_gifts}.")
    