from telethon import events
import logging
from message_handler import handle_star_gift

logger = logging.getLogger(__name__)

# --- –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –Ω–∞ –∏—Å—Ç–æ—Ä–∏—é ---
# –í–ê–ñ–ù–û: –£–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å ID –∏–ª–∏ —é–∑–µ—Ä–Ω–µ–π–º —á–∞—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ "–¥–æ–≥–Ω–∞—Ç—å" –ø–æ –∏—Å—Ç–æ—Ä–∏–∏
CHATS_TO_PROCESS_HISTORY = ['@kupil_prodal_l9m'] 


def register_gift_listener(client):
    """
    –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –í–°–ï –ù–û–í–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è (real-time).
    """
    @client.on(events.NewMessage)
    async def handle_new_gift(event):
        message = event.message
        action = getattr(message, 'action', None)
        if not action:
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∏–º–µ–Ω–∏ —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è
        action_type = type(action).__name__
        if action_type == 'MessageActionStarGiftUnique':
            logger.info(f"üéÅ (Real-Time) –ù–æ–≤—ã–π NFT: {action_type} –≤ —á–∞—Ç–µ {message.chat_id}")
            try:
                await handle_star_gift(message, client)
            except Exception as e:
                logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ NFT: {e}")


async def process_chat_history(client):
    """
    –ü—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∞—Ä—ã–µ/–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏.
    """
    for chat_identifier in CHATS_TO_PROCESS_HISTORY:
        logger.info(f"‚è≥ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞: {chat_identifier}...")
        
        try:
            chat_entity = await client.get_entity(chat_identifier)
        except Exception as e:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —á–∞—Ç {chat_identifier}: {e}")
            continue

        processed_count = 0
        
        # –ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ –≤—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è–º –≤ —á–∞—Ç–µ (–±–µ–∑ –ª–∏–º–∏—Ç–∞), –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ–Ω—Ü–∞
        async for message in client.iter_messages(chat_entity, reverse=True): 
            action = getattr(message, 'action', None)
            
            # üí° –ú—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ StarGiftUnique
            if action and type(action).__name__ == 'MessageActionStarGiftUnique':
                processed_count += 1
                logger.warning(f"üìú (History) –ù–∞–π–¥–µ–Ω NFT –≤ MSG_ID: {message.id} –≤ —á–∞—Ç–µ {chat_identifier}")
                try:
                    await handle_star_gift(message, client)
                except Exception as e:
                    logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ NFT –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (MSG_ID: {message.id}): {e}")
            
            # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –¥–∞—Ç–µ, —á—Ç–æ–±—ã –Ω–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
            # if message.date < some_cutoff_date: break

        logger.info(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ {chat_identifier} –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–π–¥–µ–Ω–æ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {processed_count} NFT.")