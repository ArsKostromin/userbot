from telethon import events, functions, types
import logging

logger = logging.getLogger(__name__)

def register_gift_listener(client):
    @client.on(events.NewMessage)
    async def handle_gift(event):
        action = event.message.action
        if not action:
            return

        gift_types = (
            'MessageActionGiftCode',
            'MessageActionGiftStars',
            'MessageActionGiftTon',
            'MessageActionStarGift',
            'MessageActionStarGiftUnique'
        )

        if type(action).__name__ in gift_types:
            logger.info(f"üéÅ –ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫/NFT: {type(action).__name__}")
            logger.info(f"–û—Ç –∫–æ–≥–æ: {getattr(action, 'from_id', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            logger.info(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {action.to_dict()}")

            gift_id = getattr(action, 'gift', None)
            if gift_id:
                try:
                    info = await client(functions.payments.GetCollectibleInfoRequest(gift_id=gift_id))
                    logger.info(f"–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ NFT: {info.to_dict()}")
                except Exception as e:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ NFT: {e}")
