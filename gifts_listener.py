from telethon import events, utils
import logging
from message_handler import handle_star_gift

logger = logging.getLogger(__name__)

# --- –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –Ω–∞ –∏—Å—Ç–æ—Ä–∏—é ---
# –£–î–ê–õ–Ø–ï–ú —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ CHATS_TO_PROCESS_HISTORY
# CHATS_TO_PROCESS_HISTORY = ['@kupil_prodal_l9m'] 

def register_gift_listener(client):
    """
    –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –í–°–ï –ù–û–í–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è (real-time).
    """
    @client.on(events.NewMessage)
    async def handle_new_gift(event):
        message = event.message
        action = getattr(message, 'action', None)
        if not action:
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∏–º–µ–Ω–∏ —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è
        action_type = type(action).__name__
        if action_type == 'MessageActionStarGiftUnique':
            # –ü–æ–ª—É—á–∞–µ–º —á–∏—Ç–∞–±–µ–ª—å–Ω–æ–µ –∏–º—è —á–∞—Ç–∞ –¥–ª—è –ª–æ–≥–∞
            chat_name = utils.get_display_name(await event.get_chat())
            logger.info(f"üéÅ (Real-Time) –ù–æ–≤—ã–π NFT: {action_type} –≤ —á–∞—Ç–µ '{chat_name}'")
            try:
                await handle_star_gift(message, client)
            except Exception as e:
                logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ NFT: {e}")


async def process_chat_history(client):
    """
    –ü—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –í–°–ï–• –¥–∏–∞–ª–æ–≥–æ–≤ (—á–∞—Ç–æ–≤, –≥—Ä—É–ø–ø, –∫–∞–Ω–∞–ª–æ–≤) –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ 
    —Å—Ç–∞—Ä—ã—Ö/–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤.
    """
    logger.info("‚è≥ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∏—Å—Ç–æ—Ä–∏–∏ –í–°–ï–• —á–∞—Ç–æ–≤...")
    total_processed_gifts = 0
    total_processed_chats = 0

    # 1. –ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ –≤—Å–µ–º –¥–∏–∞–ª–æ–≥–∞–º (—á–∞—Ç–∞–º, –≥—Ä—É–ø–ø–∞–º, –∫–∞–Ω–∞–ª–∞–º)
    async for dialog in client.iter_dialogs():
        chat_entity = dialog.entity
        chat_name = utils.get_display_name(chat_entity)
        processed_count = 0
        total_processed_chats += 1

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ª–∏—á–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –∏—Ö —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å, –∏–ª–∏ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –≥—Ä—É–ø–ø–∞/–∫–∞–Ω–∞–ª
        # if dialog.is_user: continue 
        
        logger.info(f"üîé –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞: '{chat_name}' (ID: {dialog.id})")

        # 2. –ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ –≤—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è–º –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ (–±–µ–∑ –ª–∏–º–∏—Ç–∞), –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ–Ω—Ü–∞
        async for message in client.iter_messages(chat_entity, reverse=True): 
            action = getattr(message, 'action', None)
            
            # –ú—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ StarGiftUnique
            if action and type(action).__name__ == 'MessageActionStarGiftUnique':
                processed_count += 1
                total_processed_gifts += 1
                logger.warning(f"üìú (History) –ù–∞–π–¥–µ–Ω NFT –≤ MSG_ID: {message.id} –≤ —á–∞—Ç–µ '{chat_name}'")
                try:
                    await handle_star_gift(message, client)
                except Exception as e:
                    logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ NFT –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (MSG_ID: {message.id}, –ß–∞—Ç: {chat_name}): {e}")
            
            # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –ï—Å–ª–∏ —á–∞—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π, –º–æ–∂–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è 
            # if message.id < (dialog.message.id - 10000): break # –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ —á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ä–µ–µ 10000 —Å–æ–æ–±—â–µ–Ω–∏–π

        logger.info(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç–∞ '{chat_name}' –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–π–¥–µ–Ω–æ NFT: {processed_count}.")

    logger.info(f"üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —á–∞—Ç–æ–≤: {total_processed_chats}. –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ NFT: {total_processed_gifts}.")