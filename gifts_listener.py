from telethon import events, functions
import logging
from message_handler import handle_star_gift

logger = logging.getLogger(__name__)

def register_gift_listener(client):
    """
    –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤—Å–µ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏/NFT
    """
    @client.on(events.NewMessage)
    async def handle_gift(event):
        message = event.message
        action = getattr(message, 'action', None)
        if not action:
            return

        # –¢–∏–ø—ã –ø–æ–¥–∞—Ä–∫–æ–≤/NFT
        gift_types = (
            'MessageActionGiftCode',
            'MessageActionGiftStars',
            'MessageActionGiftTon',
            'MessageActionStarGift',
            'MessageActionStarGiftUnique'
        )

        action_type = type(action).__name__
        if action_type in gift_types:
            logger.info(f"üéÅ –ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫/NFT: {action_type} –≤ —á–∞—Ç–µ {message.chat_id}")

            try:
                # –í—ã–∑—ã–≤–∞–µ–º —É–∂–µ –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑ message_handler
                await handle_star_gift(message, client,
                                       chat_name=getattr(message.chat, 'title', None),
                                       chat_username=getattr(message.chat, 'username', None),
                                       sender_info=None)
            except Exception as e:
                logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥–∞—Ä–∫–∞/NFT: {e}")
