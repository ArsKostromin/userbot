import asyncio
import logging
import threading
import uvicorn

from config import LOG_FORMAT, LOG_DATE_FORMAT, LOG_LEVEL
from api.server import app
from core.bot import main_userbot
from TDLib.main import run_tdlib  # üëà –¥–æ–±–∞–≤–∏–ª–∏ TDLib

# --- –õ–û–ì–ò ---
logging.basicConfig(format=LOG_FORMAT, level=getattr(logging, LOG_LEVEL), datefmt=LOG_DATE_FORMAT)
logger = logging.getLogger(__name__)


def run_fastapi():
    """–ó–∞–ø—É—Å–∫–∞–µ–º FastAPI –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    uvicorn.run(app, host="0.0.0.0", port=8080, log_level="info")


def start_fastapi_thread():
    """–°–æ–∑–¥–∞—ë–º –ø–æ—Ç–æ–∫ –¥–ª—è FastAPI"""
    server_thread = threading.Thread(target=run_fastapi, daemon=True)
    server_thread.start()
    logger.info("‚öôÔ∏è FastAPI —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ :8080")


async def start_all():
    """–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ Telethon userbot –∏ TDLib"""
    start_fastapi_thread()

    # –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±–∞ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö async –∑–∞–¥–∞—á–∞—Ö
    userbot_task = asyncio.create_task(main_userbot())
    tdlib_task = asyncio.create_task(run_tdlib())

    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Userbot (Telethon) –∏ TDLib –∫–ª–∏–µ–Ω—Ç–∞...")
    await asyncio.gather(userbot_task, tdlib_task)


if __name__ == "__main__":
    try:
        asyncio.run(start_all())
    except KeyboardInterrupt:
        logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º...")
