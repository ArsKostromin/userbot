import logging
import asyncio
from telethon.tl.types import InputPeerUser

logger = logging.getLogger(__name__)

# üîß –ó–∞–≥–ª—É—à–∫–∞ –ø–æ–¥ TDLib
async def send_gift_via_tdlib(receiver_username, gift_slug, message="üéÅ –î–µ—Ä–∂–∏ –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç Snake Game!"):
    """
    –ó–∞–≥–ª—É—à–∫–∞ –ø–æ–¥ TDLib.
    –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ sendStarsGift —á–µ—Ä–µ–∑ TDLib JSON.
    """
    logger.info(f"üí´ [TDLib] –û—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ–¥–∞—Ä–æ–∫ '{gift_slug}' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{receiver_username} ...")
    await asyncio.sleep(1.2)
    logger.info(f"‚úÖ [TDLib] –ü–æ–¥–∞—Ä–æ–∫ '{gift_slug}' —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω @{receiver_username} (mock)")
    return True


# üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞
async def send_real_gift(client, gift_data: dict):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Telethon (–∏–ª–∏ TDLib, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
    gift_data: {
        "name": "Snake Box",
        "peer_id": 1207534564,
        "tg_user_name": "jhgvcbcg",
        "ton_contract_address": "SnakeBox-29826",
    }
    """
    try:
        user_id = int(gift_data.get("peer_id"))
        username = gift_data.get("tg_user_name")
        gift_name = gift_data.get("name")
        contract = gift_data.get("ton_contract_address")

        logger.info(f"üéÅ –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–¥–∞—Ä–∫–∞ '{gift_name}' ‚Üí {username} ({user_id})")

        # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if not client.is_connected():
            await client.connect()

        # –ü–æ–ª—É—á–∞–µ–º entity
        try:
            receiver = await client.get_input_entity(user_id)
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å entity –ø–æ ID {user_id}: {e}, –ø—Ä–æ–±—É–µ–º –ø–æ username")
            receiver = await client.get_input_entity(username)

        # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ
        message_text = f"üéÅ –õ–æ–≤–∏ –ø–æ–¥–∞—Ä–æ–∫: **{gift_name}**\n" \
                       f"üß© –ö–æ–Ω—Ç—Ä–∞–∫—Ç: `{contract}`\n" \
                       f"üíé –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ SnakeGame NFT Bot"

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Telethon
        sent = await client.send_message(receiver, message_text)
        logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–∞—Ä–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {username} ({user_id})")
        logger.debug(f"üì§ Message ID: {sent.id}")

        # TDLib mock
        await send_gift_via_tdlib(username, contract)

    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –ø–æ–¥–∞—Ä–∫–∞: {e}")
        raise


# üí• –û–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ‚Äî –ø–µ—Ä–µ–¥–∞—á–∞ NFT
async def send_gift_once(client):
    """
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ userbot
    –ë–µ—Ä—ë—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–∞—Ä–∫–µ –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—é
    """
    logger.info("üöÄ –ö–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–∞—á–∏–Ω–∞—é –ø–µ—Ä–µ–¥–∞—á—É –ø–æ–¥–∞—Ä–∫–∞...")

    gift_data = {
        "id": 5852757491946882427,
        "ton_contract_address": "SnakeBox-29826",
        "name": "Snake Box",
        "price_ton": 472.0,
        "peer_id": 1207534564,
        "tg_user_name": "jhgvcbcg",
        "sender_id": 1207534564,
        "chat_name": "[‚±Ø] r",
    }

    await send_real_gift(client, gift_data)
