# userbot/core/sender.py
import logging
from telethon import functions, types
from .telegram_client import get_client

logger = logging.getLogger(__name__)

async def send_real_gift(user_id: int, username: str, peer_id, gift_msg_id: int, gift_name: str = None):
    client = get_client()
    if not client:
        raise RuntimeError("‚ùå –ö–ª–∏–µ–Ω—Ç Telegram –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    receiver = user_id or f"@{username}"
    gift_name = gift_name or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫"

    logger.info(f"üéÅ –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–¥–∞—Ä–∫–∞ '{gift_name}' ‚Üí {receiver}")

    try:
        # –ü–æ–¥–≥—Ä—É–∂–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥–∞—Ä–∫–æ–º
        msg = await client.get_messages(peer_id, ids=gift_msg_id)
        if not msg or not msg.buttons:
            raise ValueError("‚ùå –£ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥–∞—Ä–∫–æ–º –Ω–µ—Ç inline-–∫–Ω–æ–ø–æ–∫")

        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–¥–∞—Ç—å"
        transfer_button = None
        for row in msg.buttons:
            for btn in row:
                if "–ü–µ—Ä–µ–¥–∞—Ç—å" in btn.text:
                    transfer_button = btn
                    break
            if transfer_button:
                break

        if not transfer_button:
            raise ValueError("‚ùå –ö–Ω–æ–ø–∫–∞ '–ü–µ—Ä–µ–¥–∞—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º callback-–∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–¥–∞—Ç—å"
        await client(
            functions.messages.GetBotCallbackAnswerRequest(
                peer=peer_id,
                msg_id=gift_msg_id,
                data=transfer_button.data
            )
        )

        logger.info(f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ '{gift_name}' —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {receiver}")

    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –ø–æ–¥–∞—Ä–∫–∞: {e}")
        raise
