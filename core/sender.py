# core/sender.py
import logging
from telethon import functions, types, errors

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)


async def send_snakebox_gift(client):
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º MTProto raw –≤—ã–∑–æ–≤—ã —á–µ—Ä–µ–∑ —Ç—Ä–∏ —Å–ø–æ—Å–æ–±–∞:
    1. Telethon TL functions.*
    2. –ü—Ä—è–º–æ–π invoke(functions.*)
    3. Raw dict TL —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (—á–∏—Å—Ç—ã–π MTProto)
    """

    test_username = "test_snakebox_228"

    logger.info("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º channels.checkUsername –¥–ª—è –∏–º–µ–Ω–∏: %s", test_username)

    # ü•á 1. –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ Telethon TL-–∫–ª–∞—Å—Å
    try:
        logger.info("ü•á –°–ø–æ—Å–æ–± 1 ‚Äî —á–µ—Ä–µ–∑ functions.channels.CheckUsername")
        result1 = await client(functions.channels.CheckUsernameRequest(
            channel=types.InputChannel(
                channel_id=123456,  # –ø–æ—Å—Ç–∞–≤—å —Å–≤–æ–π id –∫–∞–Ω–∞–ª–∞ –µ—Å–ª–∏ –Ω–∞–¥–æ
                access_hash=0
            ),
            username=test_username
        ))
        logger.info(f"‚úÖ –û—Ç–≤–µ—Ç (—Å–ø–æ—Å–æ–± 1): {result1}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ (—Å–ø–æ—Å–æ–± 1): {e}")

    # ü•à 2. –ß–µ—Ä–µ–∑ invoke() —Å TL –æ–±—ä–µ–∫—Ç–æ–º
    try:
        logger.info("ü•à –°–ø–æ—Å–æ–± 2 ‚Äî invoke(functions.channels.CheckUsernameRequest)")
        req = functions.channels.CheckUsernameRequest(
            channel=types.InputChannel(
                channel_id=123456,
                access_hash=0
            ),
            username=test_username
        )
        result2 = await client.invoke(req)
        logger.info(f"‚úÖ –û—Ç–≤–µ—Ç (—Å–ø–æ—Å–æ–± 2): {result2}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ (—Å–ø–æ—Å–æ–± 2): {e}")

    # ü•â 3. –ß–µ—Ä–µ–∑ raw dict (–Ω–∞—Å—Ç–æ—è—â–∏–π MTProto ‚Äú–≤ –ª–æ–±‚Äù)
    try:
        logger.info("ü•â –°–ø–æ—Å–æ–± 3 ‚Äî raw dict, pure MTProto")
        raw_request = {
            "_": "channels.checkUsername",
            "channel": {
                "_": "inputChannel",
                "channel_id": 123456,   # —Ñ–µ–π–∫–æ–≤—ã–π –∞–π–¥–∏, –ø—Ä–æ—Å—Ç–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
                "access_hash": 0
            },
            "username": test_username
        }

        # invoke –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å TLObject, –ø–æ—ç—Ç–æ–º—É –Ω–∞–ø—Ä—è–º—É—é –ª–µ–∑–µ–º –≤ client._call
        result3 = await client._call(raw_request)
        logger.info(f"‚úÖ –û—Ç–≤–µ—Ç (—Å–ø–æ—Å–æ–± 3): {result3}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ (—Å–ø–æ—Å–æ–± 3): {e}")

    logger.info("üèÅ –í—Å–µ —Ç—Ä–∏ —Å–ø–æ—Å–æ–±–∞ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏ ‚Äî —Å–º–æ—Ç—Ä–∏, –∫–∞–∫–æ–π —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–æ—à—ë–ª.")


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# from telethon import TelegramClient
# client = TelegramClient('user', API_ID, API_HASH)
# await client.start()
# await send_snakebox_gift(client)
