# core/sender.py
import logging
from telethon import functions, types, errors

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)


async def send_snakebox_gift(client, recipient_id: int, recipient_hash: int, gift_msg_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ —á–µ—Ä–µ–∑ MTProto.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ Telethon.
    """
    logger.info("üì¶ –û—Ç–ø—Ä–∞–≤–ª—è—é raw-MTProto –∑–∞–ø—Ä–æ—Å payments.transferStarGift ...")

    req = functions.payments.TransferStarGift(
        stargift=types.InputSavedStarGiftUser(msg_id=gift_msg_id),
        to_id=types.InputPeerUser(
            user_id=recipient_id,
            access_hash=recipient_hash
        )
    )

    try:
        # –í–ê–ñ–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º invoke, –Ω–µ _call ‚Äî invoke —ç—Ç–æ –ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥
        result = await client.invoke(req)
        logger.info("‚úÖ –ü–æ–¥–∞—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω!")
        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç Telegram: {result}")
        return result

    except errors.BadRequestError as e:
        err_msg = str(e)

        if "PAYMENT_REQUIRED" in err_msg:
            logger.error("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞ (PAYMENT_REQUIRED).")
            logger.info("üí° –≠—Ç–æ collectible gift ‚Äî –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å Stars.")
        elif "STARGIFT_NOT_FOUND" in err_msg:
            logger.error("‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ (msg_id) –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
        elif "PEER_ID_INVALID" in err_msg:
            logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π user_id –∏–ª–∏ access_hash –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
        else:
            logger.exception(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ Telegram API: {err_msg}")
        return None

    except Exception as e:
        logger.exception(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–¥–∞—Ä–∫–∞: {e}")
        return None
