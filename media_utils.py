import os
import asyncio
import logging
from PIL import Image
from lottie import importers
from lottie.exporters import exporters

logger = logging.getLogger(__name__)

MEDIA_ROOT = "/app/media"

async def download_and_convert_image(client, document, slug: str) -> str | None:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç TGS-—Å—Ç–∏–∫–µ—Ä –∏–∑ Telegram, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –µ–≥–æ –≤ GIF —á–µ—Ä–µ–∑ lottie,
    –∑–∞—Ç–µ–º –±–µ—Ä—ë—Ç –ø–µ—Ä–≤—ã–π –∫–∞–¥—Ä GIF –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–∞–∫ JPEG.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ JPEG –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ.
    """
    if not document or not slug:
        logger.warning("‚ö†Ô∏è –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ slug, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return None

    os.makedirs(MEDIA_ROOT, exist_ok=True)

    tgs_path = os.path.join(MEDIA_ROOT, f"{slug}.tgs")
    gif_path = os.path.join(MEDIA_ROOT, f"{slug}.gif")
    jpeg_path = os.path.join(MEDIA_ROOT, f"{slug}.jpeg")
    relative_url = f"/media/{slug}.jpeg"

    try:
        # --- –°–∫–∞—á–∏–≤–∞–µ–º TGS ---
        logger.info(f"üìÅ –°–∫–∞—á–∏–≤–∞–µ–º TGS –≤ {tgs_path}...")
        await client.download_media(document, file=tgs_path)

        loop = asyncio.get_running_loop()

        # --- –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º TGS ‚Üí GIF ---
        async def tgs_to_gif():
            def _convert():
                anim = importers.tgs.import_tgs(tgs_path)
                exporters.gif.export_gif(anim, gif_path)
            await loop.run_in_executor(None, _convert)
        
        await tgs_to_gif()

        # --- –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∫–∞–¥—Ä GIF –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ JPEG ---
        async def gif_to_jpeg():
            def _extract():
                with Image.open(gif_path) as img:
                    img.seek(0)
                    img.convert("RGB").save(jpeg_path, "JPEG")
            await loop.run_in_executor(None, _extract)
        
        await gif_to_jpeg()

        logger.info(f"‚úÖ JPEG –≥–æ—Ç–æ–≤: {jpeg_path}")
        return relative_url

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ TGS: {e}")
        return None

    finally:
        # --- –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã ---
        for f in [tgs_path, gif_path]:
            if os.path.exists(f):
                os.remove(f)
