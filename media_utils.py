import os
import logging
from PIL import Image

logger = logging.getLogger(__name__)
MEDIA_ROOT = "/app/media"

# üîó –£–∫–∞–∂–∏ –¥–æ–º–µ–Ω, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∫—Ä—É—Ç–∏—Ç—Å—è backend
BASE_URL = "https://teststudiaorbita.ru"


async def download_thumbnail_image(client, document, slug: str) -> str | None:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç thumbnail (–ø—Ä–µ–≤—å—é) —Å—Ç–∏–∫–µ—Ä–∞ –Ω–∞–ø—Ä—è–º—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPEG.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://teststudiaorbita.ru/media/slug.jpeg)
    """
    if not document or not slug:
        logger.warning("‚ö†Ô∏è –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ slug, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ.")
        return None

    os.makedirs(MEDIA_ROOT, exist_ok=True)
    jpeg_path = os.path.join(MEDIA_ROOT, f"{slug}.jpeg")
    image_url = f"{BASE_URL}/media/{slug}.jpeg"  # ‚úÖ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL –¥–ª—è Django API

    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–≤—å—é —É –¥–æ–∫—É–º–µ–Ω—Ç–∞
        thumbs = getattr(document, "thumbs", None)
        if not thumbs:
            raise ValueError("–£ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ—Ç –ø—Ä–µ–≤—å—é (thumbs).")

        # 2. –ë–µ—Ä—ë–º –ª—É—á—à–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–π) thumbnail
        best_thumb = thumbs[-1]
        logger.info(f"üìÅ –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–µ–≤—å—é —Å—Ç–∏–∫–µ—Ä–∞ –≤ {jpeg_path}...")

        # 3. –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–µ–≤—å—é —á–µ—Ä–µ–∑ Telethon
        await client.download_media(best_thumb, file=jpeg_path)

        # 4. –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Ñ–∞–π–ª —Ä–µ–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–ª—Å—è
        if not os.path.exists(jpeg_path):
            raise FileNotFoundError("–§–∞–π–ª –ø—Ä–µ–≤—å—é –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")

        logger.info(f"‚úÖ –ü—Ä–µ–≤—å—é —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ: {jpeg_path}")
        return image_url

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ thumbnail: {e}")
        try:
            # 5. –°–æ–∑–¥–∞—ë–º —Å–µ—Ä—É—é –∑–∞–≥–ª—É—à–∫—É, –µ—Å–ª–∏ –ø—Ä–µ–≤—å—é –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å
            placeholder = Image.new("RGB", (512, 512), color=(200, 200, 200))
            placeholder.save(jpeg_path, "JPEG")
            logger.warning("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É.")
            return image_url
        except Exception as e2:
            logger.error(f"üíÄ –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–≥–ª—É—à–∫–∏: {e2}")
            return None
