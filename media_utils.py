import os
import logging
from telethon.tl.types import Document, PhotoSize

logger = logging.getLogger(__name__)
MEDIA_ROOT = "/app/media"

async def download_thumbnail_image(client, document: Document, slug: str) -> str | None:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç thumbnail (–ø—Ä–µ–≤—å—é) —Å—Ç–∏–∫–µ—Ä–∞ –Ω–∞–ø—Ä—è–º—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPEG.
    –ü—Ä–æ—Å—Ç–æ —Å–∫–∞—á–∏–≤–∞–µ—Ç –∏ –ø–∏—à–µ—Ç –≤—Å—ë –≤ –ª–æ–≥–∏, –±–µ–∑ –∑–∞–≥–ª—É—à–µ–∫ –∏ –ø—Ä–∏–∫–æ–ª–æ–≤.
    """
    os.makedirs(MEDIA_ROOT, exist_ok=True)
    jpeg_path = os.path.join(MEDIA_ROOT, f"{slug}.jpeg")
    relative_url = f"/media/{slug}.jpeg"

    try:
        if not document:
            logger.warning("‚ö†Ô∏è –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ ‚Äî –Ω–µ—á–µ–≥–æ —Å–∫–∞—á–∏–≤–∞—Ç—å.")
            return None

        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–≤—å—é
        thumbs = getattr(document, "thumbs", None)
        if not thumbs:
            logger.warning("‚ùå –£ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ—Ç –ø—Ä–µ–≤—å—é (thumbs).")
            return None

        # 2. –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–µ–µ –ø—Ä–µ–≤—å—é
        best_thumb = thumbs[-1]
        if not isinstance(best_thumb, PhotoSize):
            logger.warning("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø—Ä–µ–≤—å—é.")
            return None

        # 3. –ö–∞—á–∞–µ–º
        logger.info(f"üì• –°–∫–∞—á–∏–≤–∞—é thumbnail –≤ {jpeg_path} ...")
        await client.download_media(best_thumb, file=jpeg_path)

        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Ä–µ–∞–ª—å–Ω–æ –ø–æ—è–≤–∏–ª—Å—è
        if not os.path.exists(jpeg_path):
            logger.error("‚ùå –§–∞–π–ª –ø—Ä–µ–≤—å—é –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")
            return None

        # 5. –ü–∏—à–µ–º —É—Å–ø–µ—Ö
        logger.info(f"‚úÖ –ü—Ä–µ–≤—å—é —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ: {jpeg_path}")
        logger.info(f"üåê URL: {relative_url}")
        return relative_url

    except Exception as e:
        logger.error(f"üíÄ –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–µ–≤—å—é: {e}")
        return None
