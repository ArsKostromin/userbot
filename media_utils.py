import os
import asyncio
import logging
from PIL import Image

logger = logging.getLogger(__name__)
MEDIA_ROOT = "/app/media"
PLACEHOLDER_JPEG = "/app/media/placeholder.jpeg"  # –∑–∞—Ä–∞–Ω–µ–µ –ø–æ–ª–æ–∂–∏ –ª—é–±–æ–π JPEG

async def download_and_convert_image(client, document, slug: str) -> str | None:
    """
    –°–∫–∞—á–∏–≤–∞–µ–º TGS, –Ω–æ –±–µ–∑ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ (lottie –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è),
    —Å—Ä–∞–∑—É –∫–ª–∞–¥—ë–º –∑–∞–≥–ª—É—à–∫—É JPEG –≤–º–µ—Å—Ç–æ –ø–µ—Ä–≤–æ–≥–æ –∫–∞–¥—Ä–∞.
    """
    if not document or not slug:
        logger.warning("‚ö†Ô∏è –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ slug, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return None

    os.makedirs(MEDIA_ROOT, exist_ok=True)

    jpeg_path = os.path.join(MEDIA_ROOT, f"{slug}.jpeg")
    relative_url = f"/media/{slug}.jpeg"

    try:
        logger.info(f"üìÅ –°–∫–∞—á–∏–≤–∞–µ–º TGS –≤ {MEDIA_ROOT}/{slug}.tgs (–Ω–æ –Ω–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º)...")
        await client.download_media(document, file=os.path.join(MEDIA_ROOT, f"{slug}.tgs"))

        # --- –ö–æ–ø–∏—Ä—É–µ–º –∑–∞–≥–ª—É—à–∫—É –≤–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ ---
        with Image.open(PLACEHOLDER_JPEG) as img:
            img.convert("RGB").save(jpeg_path, "JPEG")

        logger.info(f"‚úÖ JPEG –≥–æ—Ç–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞): {jpeg_path}")
        return relative_url

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å TGS: {e}")
        return None
