import os
import logging
from PIL import Image

logger = logging.getLogger(__name__)
MEDIA_ROOT = "/app/media"


async def download_thumbnail_image(client, document, slug: str) -> str | None:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç thumbnail (–ø—Ä–µ–≤—å—é) —Å—Ç–∏–∫–µ—Ä–∞ –Ω–∞–ø—Ä—è–º—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPEG.
    """
    if not document or not slug:
        logger.warning("‚ö†Ô∏è –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ slug, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ.")
        return None

    os.makedirs(MEDIA_ROOT, exist_ok=True)
    jpeg_path = os.path.join(MEDIA_ROOT, f"{slug}.jpeg")
    relative_url = f"/media/{slug}.jpeg"

    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø—Ä–µ–≤—å—é-–∫–∞—Ä—Ç–∏–Ω–∫–∏ (thumbs)
        thumbs = getattr(document, 'thumbs', None)
        if not thumbs:
            raise ValueError("–£ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ—Ç –ø—Ä–µ–≤—å—é (thumbs).")
            
        # 2. –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–π thumbnail (–æ–±—ã—á–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ - —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π)
        best_thumb = thumbs[-1]
        logger.info(f"üìÅ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é —Å—Ç–∏–∫–µ—Ä–∞ –≤ {jpeg_path}...")

        # 3. –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞, –ø–µ—Ä–µ–¥–∞–≤–∞—è –æ–±—ä–µ–∫—Ç thumbnail. Telethon —Å–∞–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç –µ–≥–æ.
        await client.download_media(best_thumb, file=jpeg_path)
        
        logger.info(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ: {jpeg_path}")
        return relative_url

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ thumbnail: {e}")
        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        try:
            placeholder = Image.new("RGB", (512, 512), color=(200, 200, 200))
            placeholder.save(jpeg_path, "JPEG")
            logger.warning("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É.")
            return relative_url
        except Exception as e2:
            logger.error(f"üíÄ –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–≥–ª—É—à–∫–∏: {e2}")
            return None