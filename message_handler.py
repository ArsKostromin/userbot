import logging
import json
import requests
import config

logger = logging.getLogger(__name__)

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–≠–ö–ï–ù–î–ê ---
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!
API_BASE_URL = config.API_BASE_URL
API_URL = f"{API_BASE_URL}/api/gifts/adds-gift/"
AUTH_TOKEN = config.API_TOKEN


def get_attribute_details(gift_info_attributes: list, name: str) -> dict:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–º—è, permille –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ (–º–æ–¥–µ–ª—å, —Ñ–æ–Ω, —É–∑–æ—Ä).
    """
    attr_data = {
        'name': None,
        'rarity_permille': None,
        'original_details': None
    }
    
    # –ò—â–µ–º –∞—Ç—Ä–∏–±—É—Ç –≤ —Å–ø–∏—Å–∫–µ
    target_attr = next((attr for attr in gift_info_attributes if getattr(attr, 'name', None) == name), None)
    
    if target_attr:
        attr_data['name'] = getattr(target_attr, 'name', None)
        attr_data['rarity_permille'] = getattr(target_attr, 'rarity_permille', None)
        
        original_details = getattr(target_attr, 'original_details', None)
        if original_details:
            attr_data['original_details'] = {
                'id': getattr(original_details, 'id', None),
                'type': getattr(original_details, 'type', None),
                'name': getattr(original_details, 'name', None),
            }
    return attr_data

def extract_gift_data(action) -> dict:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –∏–∑ action –¥–ª—è GiftSerializer.
    """
    gift_info = getattr(action, 'gift', None)
    if not gift_info:
        return {}

    attributes = getattr(gift_info, 'attributes', [])
    model_details = get_attribute_details(attributes, 'Candy Stripe')
    backdrop_details = get_attribute_details(attributes, 'Aquamarine')
    pattern_details = get_attribute_details(attributes, 'Stocking')
            
    ton_address = getattr(gift_info, 'slug', None) or str(getattr(gift_info, 'id', ''))
    gift_number = None
    slug = getattr(gift_info, 'slug', None)
    
    if slug and '-' in slug:
        number_part = slug.split('-')[-1]
        if number_part.isdigit():
            gift_number = '#' + number_part
        
    image_url = None
    candy_stripe_attr = next((attr for attr in attributes if getattr(attr, 'name', None) == 'Candy Stripe'), None)
    document = getattr(candy_stripe_attr, 'document', None)
    if document:
        image_url = f"https://t.me/sticker/{getattr(document, 'id', '')}"
    
    # --- –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Django GiftSerializer ---
    data = {
        "ton_contract_address": ton_address, 
        "name": f"{getattr(gift_info, 'title', 'Gift')} {gift_number}" if gift_number else getattr(gift_info, 'title', 'Gift'),
        "image_url": image_url,
        "price_ton": getattr(gift_info, 'value_amount', None) / 100 if getattr(gift_info, 'value_amount', None) else None, 
        
        # –í–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        "backdrop_name": backdrop_details['name'],
        "model_name": model_details['name'],
        "pattern_name": pattern_details['name'],
        "symbol": slug, 
        "rarity_level": getattr(getattr(gift_info, 'rarity_level', None), 'name', None),

        # –î–µ—Ç–∞–ª–∏ —Ä–µ–¥–∫–æ—Å—Ç–∏
        "model_rarity_permille": model_details['rarity_permille'],
        "model_original_details": model_details['original_details'],
        "pattern_rarity_permille": pattern_details['rarity_permille'],
        "pattern_original_details": pattern_details['original_details'],
        "backdrop_rarity_permille": backdrop_details['rarity_permille'],
        "backdrop_original_details": backdrop_details['original_details'],
    }
    
    # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –æ—Ç None –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã JSON
    return {k: v for k, v in data.items() if v is not None}


async def send_to_django_backend(gift_data: dict, sender_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∞ –Ω–∞ Django API.
    """
    if not API_URL:
        logger.error("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è DJANGO_GIFT_WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ü—Ä–æ–ø—É—Å–∫–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É.")
        return

    headers = {
        'Content-Type': 'application/json',
        # –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
        'Authorization': f'Token {AUTH_TOKEN}' if AUTH_TOKEN else '',
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    gift_data['telegram_sender_id'] = sender_id 

    try:
        response = requests.post(API_URL, json=gift_data, headers=headers, timeout=10)
        response.raise_for_status() 
        logger.info(f"üéâ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Django. –û—Ç–≤–µ—Ç: {response.status_code}")
        
    except requests.exceptions.RequestException as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Django (POST {API_URL}): {e}")
        logger.debug(f"–î–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: {gift_data}")


async def handle_star_gift(message, client, **kwargs):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è MessageActionStarGiftUnique.
    """
    action = getattr(message, 'action', None)
    if not action or type(action).__name__ != 'MessageActionStarGiftUnique':
        return

    sender_id = getattr(message.sender, 'id', None)

    # 1. –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    gift_data = extract_gift_data(action)
    
    logger.warning(f"üéÅ –ù–∞–π–¥–µ–Ω Star Gift –≤ MSG_ID: {message.id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {sender_id}!")
    
    # 2. –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    logger.info("--- üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è GiftSerializer (JSON-—Ñ–æ—Ä–º–∞—Ç) ---")
    print(json.dumps(gift_data, indent=4, ensure_ascii=False))
    logger.info("--------------------------------------------------")
    
    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥
    if gift_data:
        await send_to_django_backend(gift_data, sender_id)
        
    # –í–ù–ò–ú–ê–ù–ò–ï: –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ 
    # —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏, –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É.
    # –î–ª—è —Ü–µ–ª–µ–π –∏—Å—Ç–æ—Ä–∏–∏, –ª—É—á—à–µ —á–∏—Ç–∞—Ç—å –∏—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.