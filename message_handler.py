"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram
–õ–æ–≥–∏—Ä—É–µ—Ç –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Star Gifts

–õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ: message_handler.py
"""
import json
import logging
from gift_processor import extract_gift_data, get_sender_info
from api_client import send_gift_to_api

logger = logging.getLogger(__name__)


async def handle_new_message(event, client):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –í–°–ï –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ª–æ–≥–∏—Ä—É–µ—Ç –∏—Ö
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ Star Gift –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
    
    –õ–æ–≥–∏–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ: message_handler.py
    """
    message = event.message
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    try:
        chat = await client.get_entity(message.chat_id)
        chat_name = getattr(chat, 'title', getattr(chat, 'username', f"Chat {message.chat_id}"))
        chat_username = getattr(chat, 'username', None)
    except Exception as e:
        chat_name = f"Unknown Chat {message.chat_id}"
        chat_username = None
        logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ {message.chat_id}: {e}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
    sender_id = getattr(message, 'sender_id', None)
    sender_info = None
    if sender_id:
        try:
            sender_info = await get_sender_info(client, sender_id)
        except Exception as e:
            logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ {sender_id}: {e}")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ –¥–ª—è –ª–æ–≥–æ–≤
    sender_name = "Unknown"
    sender_username = ""
    if sender_info:
        sender_name = sender_info.get('sender_first_name', 'Unknown')
        sender_username = sender_info.get('sender_username', '')
        if sender_username:
            sender_display = f"{sender_name} (@{sender_username})"
        else:
            sender_display = sender_name
    else:
        sender_display = f"User {sender_id}" if sender_id else "Unknown"
    
    # –õ–æ–≥–∏—Ä—É–µ–º –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è
    logger.info(f"üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ '{chat_name}' –æ—Ç {sender_display}")
    logger.info(f"   üìç –ß–∞—Ç ID: {message.chat_id}")
    logger.info(f"   üìç –°–æ–æ–±—â–µ–Ω–∏–µ ID: {getattr(message, 'id', 'N/A')}")
    logger.info(f"   üìç –î–∞—Ç–∞: {getattr(message, 'date', 'N/A')}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
    message_type = "–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    if getattr(message, 'action', None):
        action_type = type(message.action).__name__
        message_type = f"–î–µ–π—Å—Ç–≤–∏–µ: {action_type}"
        logger.info(f"   üé≠ –¢–∏–ø: {message_type}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –ø–æ–¥–∞—Ä–∫–æ–≤
        if action_type == 'MessageActionStarGiftUnique':
            logger.warning(f"üéÅ –ù–ê–ô–î–ï–ù STAR GIFT –≤ —á–∞—Ç–µ '{chat_name}'!")
            await handle_star_gift(message, client, chat_name, chat_username, sender_info)
        elif action_type == 'MessageActionUserGift':
            logger.warning(f"üéÅ –ù–ê–ô–î–ï–ù –û–ë–´–ß–ù–´–ô –ü–û–î–ê–†–û–ö –≤ —á–∞—Ç–µ '{chat_name}'!")
            await handle_user_gift(message, client, chat_name, chat_username, sender_info)
    else:
        # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
        text_content = getattr(message, 'text', '')
        if text_content:
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
            display_text = text_content[:100] + "..." if len(text_content) > 100 else text_content
            logger.info(f"   üìù –¢–µ–∫—Å—Ç: {display_text}")
        else:
            logger.info(f"   üìù –¢–∏–ø: {message_type}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º –º–µ–¥–∏–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if hasattr(message, 'media') and message.media:
        logger.info(f"   üñºÔ∏è –ú–µ–¥–∏–∞: {type(message.media).__name__}")
    
    logger.info("   " + "‚îÄ" * 50)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –ª–æ–≥–æ–≤


async def handle_star_gift(message, client, chat_name, chat_username, sender_info):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Star Gift —Å–æ–æ–±—â–µ–Ω–∏–µ
    –í—ã–¥–µ–ª–µ–Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    """
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–∞—Ä–∫–µ
    gift_data = extract_gift_data(message.action, message)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∞
    gift_data["chat_info"] = {
        "chat_id": message.chat_id,
        "chat_name": chat_name,
        "chat_username": chat_username
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
    if sender_info:
        gift_data["sender_info"] = sender_info
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        sender_name = sender_info.get('sender_first_name', 'Unknown')
        sender_username = sender_info.get('sender_username', '')
        if sender_username:
            logger.info(f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞: {sender_name} (@{sender_username})")
        else:
            logger.info(f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞: {sender_name}")
    
    # –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    logger.info("--- üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è GiftSerializer (JSON-—Ñ–æ—Ä–º–∞—Ç) ---")
    print(json.dumps(gift_data, indent=4, ensure_ascii=False))
    logger.info("--------------------------------------------------")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ API
    api_success = await send_gift_to_api(gift_data)
    if api_success:
        logger.info("üéâ –ü–æ–¥–∞—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    else:
        logger.warning("‚ö†Ô∏è –ü–æ–¥–∞—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ API")


async def handle_user_gift(message, client, chat_name, chat_username, sender_info):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (MessageActionUserGift)
    """
    logger.info("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –æ–±—ã—á–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    # –õ–æ–≥–∏—Ä—É–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ
    action = message.action
    logger.info("--- üìã –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ ---")
    logger.info(f"   üéÅ –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è: {type(action).__name__}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ action
    gift_data = {
        "gift_type": "user_gift",
        "message_id": getattr(message, 'id', None),
        "chat_id": message.chat_id,
        "chat_name": chat_name,
        "chat_username": chat_username,
        "date": str(getattr(message, 'date', 'N/A')),
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
    if sender_info:
        gift_data["sender_info"] = sender_info
        sender_name = sender_info.get('sender_first_name', 'Unknown')
        sender_username = sender_info.get('sender_username', '')
        if sender_username:
            logger.info(f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞: {sender_name} (@{sender_username})")
        else:
            logger.info(f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞: {sender_name}")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ action
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã action
        logger.info("   üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã action:")
        for attr_name in dir(action):
            if not attr_name.startswith('_'):
                try:
                    attr_value = getattr(action, attr_name)
                    if not callable(attr_value):
                        logger.info(f"      {attr_name}: {attr_value}")
                        gift_data[f"action_{attr_name}"] = str(attr_value)
                except Exception as e:
                    logger.debug(f"      {attr_name}: <–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å: {e}>")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ
        if hasattr(action, 'gift'):
            gift_info = action.gift
            logger.info("   üéÅ –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ:")
            gift_data["gift_info"] = {}
            
            for attr_name in dir(gift_info):
                if not attr_name.startswith('_'):
                    try:
                        attr_value = getattr(gift_info, attr_name)
                        if not callable(attr_value):
                            logger.info(f"      gift.{attr_name}: {attr_value}")
                            gift_data["gift_info"][attr_name] = str(attr_value)
                    except Exception as e:
                        logger.debug(f"      gift.{attr_name}: <–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å: {e}>")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ
        if hasattr(action, 'user_id'):
            recipient_id = action.user_id
            logger.info(f"   üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞: {recipient_id}")
            gift_data["recipient_id"] = recipient_id
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ
            try:
                recipient_info = await get_sender_info(client, recipient_id)
                gift_data["recipient_info"] = recipient_info
                recipient_name = recipient_info.get('sender_first_name', 'Unknown')
                recipient_username = recipient_info.get('sender_username', '')
                if recipient_username:
                    logger.info(f"   üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient_name} (@{recipient_username})")
                else:
                    logger.info(f"   üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient_name}")
            except Exception as e:
                logger.warning(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ: {e}")
        
    except Exception as e:
        logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø–æ–¥–∞—Ä–∫–∞: {e}")
    
    # –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    logger.info("--- üì¶ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–∞—Ä–∫–µ (JSON-—Ñ–æ—Ä–º–∞—Ç) ---")
    print(json.dumps(gift_data, indent=4, ensure_ascii=False))
    logger.info("--------------------------------------------------")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ API
    logger.info("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–∞—Ä–∫–µ –≤ Django API...")
    api_success = await send_gift_to_api(gift_data)
    if api_success:
        logger.info("üéâ –û–±—ã—á–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    else:
        logger.warning("‚ö†Ô∏è –û–±—ã—á–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ API")